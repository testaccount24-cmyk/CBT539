*---------------------------------------------------------------------*;
* SAS PROCEDURE TO PRINT DATA SET ACTIVITY                 HW19990216 *;
*---------------------------------------------------------------------*;
* ADD TYPE 18 - RENAME  (FROM-TO FOR EACH VOL OF MULTIVOL) HW20010827 *;
*---------------------------------------------------------------------*;
DATA F1   ;
FORMAT DSNAME  DSNAME2  $44. DATE WEEKDATE19. TIME TIME8.
       CATNAME MCATNAME $35. ACTION $18. JOBNAME $8. VOLSER $6. ;
PREFIX   = SYSPARM();
PREFIXL = LENGTH(PREFIX);
ISPLAT   = INDEX(PREFIX,'*');
IPERCENT = INDEX(PREFIX,'%');
IF (ISPLAT+IPERCENT) GT 0 THEN DO;
        IF SUM(ISPLAT,IPERCENT) EQ MAX(ISPLAT,IPERCENT) THEN
           PREFIX=SUBSTR(PREFIX,1,MAX(ISPLAT,IPERCENT)-1);
   ELSE    PREFIX=SUBSTR(PREFIX,1,MIN(ISPLAT,IPERCENT)-1);
   END;
*---------------------------------------------------------------------*;
INFILE SMF END=LAST;
INPUT @02  ID            PIB1.
      @03  SMFTIME  SMFSTAMP8. @;
IF ID NOT IN( 14 /* OPEN FOR INPUT  X'0E' */
              15 /* OPEN FOR OUTPUT X'0F' */
              17 /* DASD SCRATCH    X'11' */
              18 /* DASD RENAME     X'12' */
              61 /* CATALOG         X'3D' */
              62 /* VSAM OPEN       X'3E' */
              64 /* VSAM CLOSE/EOV  X'40' */
              65 /* UNCATALOG       X'41' */
              66 /* ALTER           X'42' */
              )
   THEN DELETE;
SELECT (ID);
   WHEN (14) DO;
      ACTION='INPUT';
      INPUT @065 DSNAME $44. @ ;
      LINK DSNCHEK;
      INPUT @183 VOLSER  $6.   ;
      END;
   WHEN (15) DO;
      ACTION='OUTPUT';
      INPUT @65  DSNAME $44. @ ;
      LINK DSNCHEK;
      INPUT @183 VOLSER  $6.   ;
      END;
   WHEN (17) DO;
      ACTION='SCRATCH';
      INPUT @41  DSNAME $44. @ ;
      LINK DSNCHEK;
      INPUT @091 VOLSER  $6.   ;
      END;
   WHEN (18) DO;
      ACTION='RENAME(FROM)';
      INPUT @41  DSNAME $44. @85 DSNAME2 $44. @ ;
      LINK DSNCHEK;
      INPUT @135 VOLSER  $6.   ;
      END;
   WHEN (61) DO;
      ACTION='CATALOG';
      INPUT @117 DSNAME     $44.
            @209 SMF61TYP    $1.  @ ;
      LINK DSNCHEK;
      INPUT @047 JOBNAME $8. @ ;     /* (MOST JOBNAMES ARE IN COL 15) */
      SELECT (SMF61TYP);                    /* SMF61TYP - ENTRY TYPE  */
         WHEN ('A') DO;                     /* C'A' NONVSAM DATA SET  */
          ACTION='CATALOG NONVSAM   ';
          INPUT @265 STORCLAS  $1. @ ;
          IF STORCLAS='S' THEN INPUT @309 VOLSER $6.;  /*LOCAL: SC----*/
                          ELSE INPUT @283 VOLSER $6.;  /* TAPE        */
          END;
         WHEN ('B') DO;                     /* C'B' GDG BASE          */
          ACTION='CATALOG GDG BASE  '; VOLSER=' '; END;
         WHEN ('C') DO;                     /* C'C' CLUSTER           */
          ACTION='CATALOG VSAM      '; INPUT @362 VOLSER $6.; END;
          /* IGNORING THE CASE WHERE THE INDEX IS ON A DIFFERENT VOL  */
                                            /* C'D' DATA SET          */
         WHEN ('G') DO;                     /* C'G' ALTERNATE INDEX   */
          ACTION='CATALOG AIX       '; INPUT @376 VOLSER $6.; END;
         /* COVERED IN TYPE A ABOVE */      /* C'H' ACTIVE GDS ENTRY  */
         /* COVERED IN TYPE C ABOVE */      /* C'I' INDEX             */
         WHEN ('M') DO;                     /* C'M' MASTER CATALOG    */
          ACTION='CATALOG MAST CATLG'; VOLSER=' '; END;
         WHEN ('P') DO;                     /* C'P' PAGE SPACE        */
          ACTION='CATALOG PAGE SPACE'; VOLSER=' '; END;
         WHEN ('R') DO;                     /* C'R' PATH              */
          ACTION='CATALOG PATH      '; VOLSER=' '; END;
                                            /* C'U' USER CATALOG      */
         /* VVDS CREATION - INFREQUENT */   /* C'V' VOLUME            */
         WHEN ('X') DO;                     /* C'X' ALIAS NAME        */
          ACTION='CATALOG ALIAS NAME';
          INPUT @266 CATNAME $ @072 MCATNAME $35.;
          DSNAME=TRIM(DSNAME)||'-'||TRIM(MCATNAME)||'-'||TRIM(CATNAME);
          VOLSER=' '; END;
                                            /* C'Y' UPGRADE           */
         OTHERWISE DELETE;
         END;
      END;
   WHEN (62) DO;
      ACTION='VSAMOPN';
      INPUT @93  DSNAME $44. @ ;
      LINK DSNCHEK;
      INPUT @139 VOLSER  $6.   ;
      END;
   WHEN (64) DO;
      ACTION='VSAMCLO';
      INPUT @85  DSNAME $44. @ ;
      LINK DSNCHEK;
      INPUT @145 VOLSER          $6.
            @039 SMF64RIN      PIB1.     /* FLAG BYTE */
                                   /*  BIT  MEANING WHEN SET          */
                                   /*                                 */
                                   /*  0    COMPONENT CLOSED          */
                                   /*  1    VOLUME SWITCHED           */
                                   /*  2    NO SPACE AVAILABLE        */
                                   /*  3    RECORD IS A CATALOG OR    */
                                   /*       CRA RECORD                */
                                   /*  4    COMPONENT CLOSED, TYPE=T  */
                                   /*  5    RECORD WRITTEN DURING     */
                                   /*       ABEND PROCESSING          */
                                   /*  6    RECORD IS FOR A VVDS OR   */
                                   /*       ICF CATALOG BEING OPENED  */
                                   /*       OR CLOSED AS A DATA       */
                                   /*       SET.(1)                   */
                                   /*  7    RESERVED.                 */
            ;
         IF SMF64RIN='1.......'B THEN ACTION='VSAMCLO';
         IF SMF64RIN='.1......'B THEN ACTION='VOLSWIT';
         IF SMF64RIN='..1.....'B THEN ACTION='ENDXTNT';
         IF SMF64RIN='...1....'B THEN ACTION='CATRECD';
         IF SMF64RIN='....1...'B THEN ACTION='TCLOSED';
         IF SMF64RIN='.....1..'B THEN ACTION='ABEND  ';
         IF SMF64RIN='......1.'B THEN ACTION='CATDATA';
         IF SMF64RIN='.......1'B THEN ACTION='62RESVD';  /* RESERVED */
      END;
   WHEN (65) DO;
      ACTION='UNCATLG';
      INPUT @117 DSNAME $44. @ ;
      LINK DSNCHEK;
      INPUT @047 JOBNAME $8.   ;     /* (MOST JOBNAMES ARE IN COL 15) */
      VOLSER=' ';
      END;
   WHEN (66) DO;
      ACTION='ALTER' ;
      INPUT @117 DSNAME     $44.
            @209 SMF66TYP    $1.  @ ;
      LINK DSNCHEK;
      INPUT @047 JOBNAME $8.   ;     /* (MOST JOBNAMES ARE IN COL 15) */
      IF SMF66TYP='C' THEN ACTION='ALTER VSAM';
 ELSE IF SMF66TYP='A' THEN ACTION='ALTER NONVSAM';
 ELSE IF SMF66TYP='B' THEN ACTION='ALTER GDG BASE';
      INPUT;                         * RELEASE TRAILING AT SIGN ( @ ) *;
      VOLSER = ' ';
      END;
   OTHERWISE;
END;
_ERROR_ = 0 ;
OUTPUT;
RETURN;
*-------------- SUBROUTINES ------------------------------------------*;
DSNCHEK:                                * FILTER UP TO FIRST WILDCARD *;
   IF DSNAME NE: TRIM(PREFIX) THEN DELETE;
   INPUT @15  JOBNAME         $8.
         @11  SYSID           $4. @;
   DATE=DATEPART(SMFTIME); TIME=TIMEPART(SMFTIME);
   DOW=UPCASE(PUT(DATE,WEEKDATE3.));     * UPPER CASE DAY OF THE WEEK *;
   RETURN;
*=====================================================================*;
RUN;
*---------------------------------------------------------------------*;
PROC SORT DATA=F1;
BY DATE TIME;
*---------------------------------------------------------------------*;
OPTIONS NOCENTER ;
*---------------------------------------------------------------------*;
DATA _NULL_;
SET F1;
FILE SASLIST NOTITLE HEADER=PRTHEAD;           * WE DO OUR OWN TITLES *;
RETAIN OLDDOW 'XXX' LINELEN 0 ;
IF _N_ EQ 1 THEN DO;
   OLDDOW=DOW;
   LINELEN=1+3+1+10+1+11+1+8+1+18+1+6+1+44;   * 1 FOR ASA, EACH BLANK *;
   END;
IF OLDDOW NE DOW THEN DO;
   PUT @001 ' '; OLDDOW=DOW; END;
PUT @001 DOW          $3.       +01
         DATE   YYMMDD10.       +01
         TIME     TIME11.2      +01
         JOBNAME      $8.       +01
         ACTION      $18.       +01
         VOLSER       $6.       +01
         DSNAME      $44.       +01
         ;
IF ACTION EQ: 'RENAME' THEN DO;
   ACTION='RENAME(TO)';
   PUT @001 DOW          $3.       +01
            DATE   YYMMDD10.       +01
            TIME     TIME11.2      +01
            JOBNAME      $8.       +01
            ACTION      $18.       +01
            VOLSER       $6.       +01
            DSNAME2     $44.       +01
            ;
   END;
RETURN;
*---------------------------------------------------------------------*;
PRTHEAD: PAGENO+1;
PUT   @001 "SMF SEARCH RESULTS FOR: &SYSPARM. " +01
      @(LINELEN-6-9-10-9-7) "&SYSTIME."
      @(LINELEN-6-9-10-9 ) "&SYSDATE."
      @(LINELEN-6-9-10 ) "&SYSJOBID."
      @(LINELEN-6-9   ) 'PAGE' +01 PAGENO Z4.
   // @001 'DAY'                +01
           '  DATE    '         +01
           '   TIME    '        +01
           'JOB/USER'           +01
           '      ACTION      ' +01
           'VOLSER'             +01
           'DATA SET NAME'
    / @001  3*'-'  +01
           10*'-'  +01
           11*'-'  +01
            8*'-'  +01
           18*'-'  +01
            6*'-'  +01
           44*'-' ;
  RETURN;
*---------------------------------------------------------------------*;
* IF DATA SET F1 IS EMPTY, PUT OUT HEADERS AND A MESSAGE              *;
*---------------------------------------------------------------------*;
DATA _NULL_;
IF 0 THEN SET F1 NOBS=COUNT;
FILE SASLIST NOTITLE;
IF COUNT=0 THEN DO;
   PAGENO+1;
   LINELEN=1+3+1+10+1+11+1+8+1+18+1+6+1+44;   * 1 FOR ASA, EACH BLANK *;
   PUT   @001 "SMF SEARCH RESULTS FOR: &SYSPARM. " +01
         @(LINELEN-6-9-10-9-7) "&SYSTIME."
         @(LINELEN-6-9-10-9 ) "&SYSDATE."
         @(LINELEN-6-9-10 ) "&SYSJOBID."
         @(LINELEN-6-9   ) 'PAGE' +01 PAGENO Z4. ;
  PUT // @001 'DAY'                +01
              '  DATE    '         +01
              '   TIME    '        +01
              'JOB/USER'           +01
              '      ACTION      ' +01
              'VOLSER'             +01
              'DATA SET NAME'
       / @001  3*'-'  +01
              10*'-'  +01
              11*'-'  +01
               8*'-'  +01
              18*'-'  +01
               6*'-'  +01
              44*'-' ;
   PUT '***';
   PUT "*** NO ACCESSES FOUND FOR &SYSPARM. ";
   PUT "***    (CHECK SPELLING??)";
   PUT '***';
   END;
*---------------------------------------------------------------------*;
RUN;
